<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Viz 2</title>
		<script type="text/javascript" src="https://d3js.org/d3.v4.js"></script>
		<style type="text/css">
			/* No style rules here yet */
		</style>
	</head>
	<body>
	
		<p id='ButtonBoth'>Men and women</p>
		<p id='ButtonMen'>Men only</p>
		<p id='ButtonWomen'>Women only</p>
	
		<script type="text/javascript">
			var w = 700;
var h = 300;
var padding = 30;

var dataMenYear = [];
var dataMenTime = [];
var dataWomenYear = [];
var dataWomenTime = [];
var dataBothYear = [];
var dataBothTime = [];
var dataMenTogether = [];
var dataWomenTogether = [];
var dataBothTogether = [];

var data = {
    "Men": [],
    "Women": [],
    "Both": []
}

var data_Men;
var data_Women;
var data_Both;

d3.csv('mensmarathon.csv', function(dataMen){
d3.csv('womensmarathon.csv', function(dataWomen){           
console.log(dataMen);       
console.log(dataWomen);



var i = 0;

for (; i < dataMen.length; i++) {   
    data["Men"].push ({
      Year: parseInt(dataMen[i].Year),
      Time: parseInt(dataMen[i].Time) 
    });
    data["Both"].push ({
      Year: parseInt(dataMen[i].Year),
      Time: parseInt(dataMen[i].Time) 
    });

    dataMenYear.push(parseInt(dataMen[i].Year));
    dataMenTime.push(parseInt(dataMen[i].Time));
}

for (i = 0; i < dataWomen.length; i++) {    
    data["Women"].push ({
      Year: parseInt(dataWomen[i].Year),
      Time: parseInt(dataWomen[i].Time) 
    });
    data["Both"].push ({
      Year: parseInt(dataWomen[i].Year),
      Time: parseInt(dataWomen[i].Time) 
    });        
    dataWomenYear.push(parseInt(dataWomen[i].Year));
    dataWomenTime.push(parseInt(dataWomen[i].Time));
}

for (i = 0; i < dataMenTime.length; i++) {  
    dataBothTime.push(dataMenTime[i]);
    dataBothYear.push(dataMenYear[i]);          
}

for (i = 0; i < dataWomenTime.length; i++) {
    dataBothTime.push(dataWomenTime[i]);
    dataBothYear.push(dataWomenYear[i]);
}

for (i = 0; i < dataMenTime.length; i++) {  
    dataMenTogether.push([dataMenYear[i],dataMenTime[i]]);
    dataBothTogether.push([dataMenYear[i],dataMenTime[i]]);
}

for (i = 0; i < dataWomenTime.length; i++) {
    dataWomenTogether.push([dataWomenYear[i],dataWomenTime[i]]);
    dataBothTogether.push([dataWomenYear[i],dataWomenTime[i]]);
}


//Create scale functions
var xScale = d3.scaleLinear()
                     .domain([d3.min(data["Both"],function(d) { return d.Year-3; }),d3.max(data["Both"], function(d) { return d.Year+3; })])
                     .range([padding, w - padding * 2])

var yScale = d3.scaleLinear()
                     .domain([d3.min(data["Both"],function(d) { return d.Time-10; }),d3.max(data["Both"], function(d) { return d.Time+10; })])
                     .range([h - padding, padding]);


//Define X axis
var xAxis = d3.axisBottom()
                  .scale(xScale)
                  .ticks(5);
//Define Y axis
var yAxis = d3.axisLeft()
                  .scale(yScale)
                  .ticks(5);

//Create SVG element
var svg = d3.select("body")
            .append("svg")
            .attr("width", w)
            .attr("height", h);

var line = d3.line()
            .x(function(d){return xScale(d.Year);})
            .y(function(d){return yScale(d.Time);});

var lineMen = svg.append("path")
                 .datum(data.Men)
                 .attr("class", "line men")
                 .attr("d", line);

var lineWomen = svg.append("path")
               .datum(data.Women)
               .attr("class", "line women")
               .attr("d", line);

//Create circles
svg.selectAll("circle")
   .data(dataMenTogether)
   .enter()
   .append("circle")
   .attr("cx", function(d) {
        return xScale(d[0]);
   })
   .attr("cy", function(d) {
        return yScale(d[1]);
   })
   .attr("r", 2)
   .attr("fill","red")
   .append("svg:title")
    .text(function(d) { return d; });

//Create circles
svg.selectAll("rect")
   .data(dataWomenTogether)
   .enter()
   .append("rect")
   .attr("x", function(d) {
        return xScale(d[0]);
   })
   .attr("y", function(d) {
        return yScale(d[1]);
   })
   .attr("width", 4)
   .attr("height",4)
   .attr("fill","green")
   .append("svg:title")
    .text(function(d) { return d; });

//Create X axis
svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + (h - padding) + ")")
    .call(xAxis);

//Create Y axis
svg.append("g")
    .attr("class", "y axis")
    .attr("transform", "translate(" + padding + ",0)")
    .call(yAxis);


d3.select("#ButtonBoth")
    .on("click", function() {
        changeData (dataBothYear, dataBothTime, dataBothTogether, 'both');
    });

function changeData (dataYear, dataTime,  dataBoth, input) {


    xScale.domain([d3.min(dataYear,function(d) { return d-3; }),d3.max(dataYear, function(d) { return d+3; })]);
    yScale.domain([d3.min(dataTime,function(d) { return d-10; }),d3.max(dataTime, function(d) { return d+10; })]);
    
        if(input=="women"){
            svg.selectAll("circle")
            .data(dataMenTogether)
            .transition()
            .duration(1000)
            .ease(d3.easeLinear)
            .attr("fill-opacity",0.0)
            .attr("stroke-opacity",0.0);

        svg.selectAll("rect")
            .data(dataWomenTogether)
           .transition()
           .duration(1000)
           .ease(d3.easeLinear)
           .attr("x", function(d) {
                return xScale(d[0]);
           })
           .attr("y", function(d) {
                return yScale(d[1]);
           })
           .attr("width", 4)
           .attr("height",4)
           .attr("fill","green")
           .attr("fill-opacity",1.0)
           .attr("stroke-opacity",1.0);
        } else if(input=="men"){
            svg.selectAll("circle")
               .data(dataMenTogether)
                .transition()
                .duration(1000)
               .ease(d3.easeLinear)
               .attr("cx", function(d) {
                    return xScale(d[0]);
               })
               .attr("cy", function(d) {
                    return yScale(d[1]);
               })
               .attr("r", 2)
               .attr("fill","red")
               .attr("fill-opacity",1.0)
               .attr("stroke-opacity",1.0);

            //Create circles
            svg.selectAll("rect")
                .transition()
                .duration(1000)
                .ease(d3.easeLinear)
                .attr("fill-opacity",0.0)
                .attr("stroke-opacity",0.0);

        } else if(input=="both"){
        svg.selectAll("circle")
           .data(dataMenTogether)
            .transition()
            .duration(1000)
           .ease(d3.easeLinear)
           .attr("cx", function(d) {
                return xScale(d[0]);
           })
           .attr("cy", function(d) {
                return yScale(d[1]);
           })
           .attr("r", 2)
           .attr("fill","red")
           .attr("fill-opacity",1.0)
           .attr("stroke-opacity",1.0);

        svg.selectAll("rect")
           .data(dataWomenTogether)
           .transition()
           .duration(1000)
           .ease(d3.easeLinear)
           .attr("x", function(d) {
                return xScale(d[0]);
           })
           .attr("y", function(d) {
                return yScale(d[1]);
           })
           .attr("width", 4)
           .attr("height",4)
           .attr("fill","green")
           .attr("fill-opacity",1.0)
           .attr("stroke-opacity",1.0);

        } else {
          console.log("Fuck off!");
        }
        
    //Update X axis
    svg.select(".x.axis")
        .transition()
        .duration(1000)
        .call(xAxis);
    
    //Update Y axis
    svg.select(".y.axis")
        .transition()
        .duration(1000)
        .call(yAxis);

}

d3.select("#ButtonWomen")
    .on("click", function() {
        changeData (dataWomenYear, dataWomenTime, dataWomenTogether, 'women');
    });


d3.select("#ButtonMen")
    .on("click", function() {
        changeData (dataMenYear, dataMenTime, dataBothTogether, 'men');

    });

});});
		</script>
	</body>
</html>